1727691266.650996 [0]       ros2: add_peer_addresses: 1_xterm: unknown address
data: <?xml version="1.0" ?> <!-- =================================================================================== --> <!-- |    This document was autogenerated by xacro from /home/theconstruct/ros2_ws/install/barista_description/share/barista_description/robot/mule_barista.xacro | --> <!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | --> <!-- =================================================================================== --> <robot name="barista"> <link name="base_footprint"/> <joint name="base_joint" type="fixed"> <origin rpy="0 0 0" xyz="0 0 0.0102"/> <parent link="base_footprint"/> <child link="base_link"/> </joint> <link name="base_link"> <visual> <geometry> <!-- new mesh --> <mesh filename="package://barista_description/meshes/kobuki/main_body.dae"/> </geometry> <origin rpy="0 0 0" xyz="0.001 0 0.05199"/> </visual> <collision> <geometry> <cylinder length="0.10938" radius="0.178"/> </geometry> <origin rpy="0 0 0" xyz="0.0 0 0.05949"/> </collision> <inertial> <!-- COM experimentally determined --> <origin xyz="0.01 0 0"/> <mass value="2.4"/> <!-- 2.4/2.6 kg for small/big battery pack --> <inertia ixx="0.019995" ixy="0.0" ixz="0.0" iyy="0.019995" iyz="0.0" izz="0.03675"/> </inertial> </link> <joint name="joint_tire_left" type="continuous"> <parent link="base_link"/> <child link="wheel_left_link"/> <origin rpy="-1.5707963267948966 0 0" xyz="0.00 0.115 0.0250"/> <axis xyz="0 0 1"/> </joint> <link name="wheel_left_link"> <visual> <geometry> <mesh filename="package://barista_description/meshes/wheel.dae"/> </geometry> <origin rpy="0 0 0" xyz="0 0 0"/> </visual> <collision> <geometry> <cylinder length="0.0206" radius="0.0352"/> </geometry> <origin rpy="0 0 0" xyz="0 0 0"/> </collision> <inertial> <mass value="0.01"/> <origin xyz="0 0 0"/> <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/> </inertial> </link> <joint name="joint_tire_right" type="continuous"> <parent link="base_link"/> <child link="wheel_right_link"/> <origin rpy="-1.5707963267948966 0 0" xyz="0.00 -0.115 0.0250"/> <axis xyz="0 0 1"/> </joint> <link name="wheel_right_link"> <visual> <geometry> <mesh filename="package://barista_description/meshes/wheel.dae"/> </geometry> <origin rpy="0 0 0" xyz="0 0 0"/> </visual> <collision> <geometry> <cylinder length="0.0206" radius="0.0350"/> </geometry> <origin rpy="0 0 0" xyz="0 0 0"/> </collision> <inertial> <mass value="0.01"/> <origin xyz="0 0 0"/> <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/> </inertial> </link> <joint name="caster_front_joint" type="fixed"> <parent link="base_link"/> <child link="caster_front_link"/> <origin rpy="-1.5707963267948966 0 0" xyz="0.115 0.0 0.007"/> </joint> <link name="caster_front_link"> <collision> <geometry> <cylinder length="0.0176" radius="0.017"/> </geometry> <origin rpy="0 0 0" xyz="0 0 0"/> </collision> <inertial> <mass value="0.01"/> <origin xyz="0 0 0"/> <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/> </inertial> </link> <joint name="caster_back_joint" type="fixed"> <parent link="base_link"/> <child link="caster_back_link"/> <origin rpy="-1.5707963267948966 0 0" xyz="-0.135 0.0 0.009"/> </joint> <link name="caster_back_link"> <collision> <geometry> <cylinder length="0.0176" radius="0.017"/> </geometry> <origin rpy="0 0 0" xyz="0 0 0"/> </collision> <inertial> <mass value="0.01"/> <origin xyz="0 0 0"/> <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/> </inertial> </link> <!-- Kobuki's sensors --> <joint name="gyro_joint" type="fixed"> <axis xyz="0 1 0"/> <origin rpy="0 0 0" xyz="0.056 0.062 0.0202"/> <parent link="base_link"/> <child link="gyro_link"/> </joint> <link name="gyro_link"> <inertial> <mass value="0.001"/> <origin rpy="0 0 0" xyz="0 0 0"/> <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/> </inertial> </link> <joint name="cliff_sensor_left_joint" type="fixed"> <origin rpy="0 1.5707963267948966 0" xyz="0.08734 0.13601 0.0214"/> <parent link="base_link"/> <child link="cliff_sensor_left_link"/> </joint> <link name="cliff_sensor_left_link"> <inertial> <mass value="0.0001"/> <origin xyz="0 0 0"/> <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/> </inertial> </link> <joint name="cliff_sensor_right_joint" type="fixed"> <origin rpy="0 1.5707963267948966 0" xyz="0.085 -0.13601 0.0214"/> <parent link="base_link"/> <child link="cliff_sensor_right_link"/> </joint> <link name="cliff_sensor_right_link"> <inertial> <mass value="0.0001"/> <origin xyz="0 0 0"/> <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/> </inertial> </link> <joint name="cliff_sensor_front_joint" type="fixed"> <origin rpy="0 1.5707963267948966 0" xyz="0.156 0.00 0.0214"/> <parent link="base_link"/> <child link="cliff_sensor_front_link"/> </joint> <link name="cliff_sensor_front_link"> <inertial> <mass value="0.0001"/> <origin xyz="0 0 0"/> <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/> </inertial> </link> <gazebo reference="wheel_left_link"> <mu1>1.0</mu1> <mu2>1.0</mu2> <kp>1000000.0</kp> <kd>100.0</kd> <minDepth>0.001</minDepth> <maxVel>1.0</maxVel> </gazebo> <gazebo reference="wheel_right_link"> <mu1>1.0</mu1> <mu2>1.0</mu2> <kp>1000000.0</kp> <kd>100.0</kd> <minDepth>0.001</minDepth> <maxVel>1.0</maxVel> </gazebo> <gazebo reference="caster_front_link"> <mu1>0.0</mu1> <mu2>0.0</mu2> <kp>1000000.0</kp> <kd>100.0</kd> <minDepth>0.001</minDepth> <maxVel>1.0</maxVel> </gazebo> <gazebo reference="caster_back_link"> <mu1>0.0</mu1> <mu2>0.0</mu2> <kp>1000000.0</kp> <kd>100.0</kd> <minDepth>0.001</minDepth> <maxVel>1.0</maxVel> </gazebo> <gazebo reference="base_link"> <mu1>0.3</mu1> <mu2>0.3</mu2> <sensor name="bumpers" type="contact"> <always_on>1</always_on> <update_rate>50.0</update_rate> <visualize>true</visualize> <contact> <collision>base_footprint_collision_base_link</collision> </contact> </sensor> </gazebo> <gazebo reference="cliff_sensor_left_link"> <sensor name="cliff_sensor_left" type="ray"> <always_on>true</always_on> <update_rate>50</update_rate> <visualize>true</visualize> <ray> <scan> <horizontal> <samples>50</samples> <resolution>1.0</resolution> <min_angle>-0.0436</min_angle> <!-- -2.5 degree --> <max_angle>0.0436</max_angle> <!-- 2.5 degree --> </horizontal> </scan> <range> <min>0.01</min> <max>0.15</max> <resolution>1.0</resolution> </range> </ray> </sensor> </gazebo> <gazebo reference="cliff_sensor_right_link"> <sensor name="cliff_sensor_right" type="ray"> <always_on>true</always_on> <update_rate>50</update_rate> <visualize>true</visualize> <ray> <scan> <horizontal> <samples>50</samples> <resolution>1.0</resolution> <min_angle>-0.0436</min_angle> <!-- -2.5 degree --> <max_angle>0.0436</max_angle> <!-- 2.5 degree --> </horizontal> </scan> <range> <min>0.01</min> <max>0.15</max> <resolution>1.0</resolution> </range> </ray> </sensor> </gazebo> <gazebo reference="cliff_sensor_front_link"> <sensor name="cliff_sensor_front" type="ray"> <always_on>true</always_on> <update_rate>50</update_rate> <visualize>true</visualize> <ray> <scan> <horizontal> <samples>50</samples> <resolution>1.0</resolution> <min_angle>-0.0436</min_angle> <!-- -2.5 degree --> <max_angle>0.0436</max_angle> <!-- 2.5 degree --> </horizontal> </scan> <range> <min>0.01</min> <max>0.15</max> <resolution>1.0</resolution> </range> </ray> </sensor> </gazebo> <gazebo reference="gyro_link"> <sensor name="imu" type="imu"> <always_on>true</always_on> <update_rate>50</update_rate> <visualize>false</visualize> <imu> <noise> <type>gaussian</type> <rate> <mean>0.0</mean> <stddev>1.96e-06</stddev> <!-- 0.25 x 0.25 (deg/s) --> <bias_mean>0.0</bias_mean> <bias_stddev>0.0</bias_stddev> </rate> <accel> <!-- not used in the plugin and real robot, hence using tutorial values --> <mean>0.0</mean> <stddev>1.7e-2</stddev> <bias_mean>0.1</bias_mean> <bias_stddev>0.001</bias_stddev> </accel> </noise> </imu> </sensor> </gazebo> <gazebo> <plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive"> <ros> <namespace>/cleaner_2</namespace> <!-- <argument>cmd_vel:=/cmd_vel</argument> --> <!-- <argument>odom:=/odom</argument> --> </ros> <!-- wheels --> <left_joint>joint_tire_left</left_joint> <right_joint>joint_tire_right</right_joint> <!-- kinematics --> <wheel_separation>0.4</wheel_separation> <wheel_diameter>0.1</wheel_diameter> <!-- limits --> <max_wheel_torque>20</max_wheel_torque> <max_wheel_acceleration>1.0</max_wheel_acceleration> <!-- output --> <publish_odom>true</publish_odom> <publish_odom_tf>true</publish_odom_tf> <publish_wheel_tf>false</publish_wheel_tf> <odometry_frame>cleaner_2/odom</odometry_frame> <robot_base_frame>cleaner_2/base_footprint</robot_base_frame> </plugin> </gazebo> <link name="laser_sensor_link"> <inertial> <mass value="1e-5"/> <origin rpy="0 0 0" xyz="0 0 0"/> <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/> </inertial> <collision> <origin rpy="0 0 0" xyz="0 0 0"/> <geometry> <box size="0.1 0.1 0.1"/> </geometry> </collision> <visual> <origin rpy="0 0 0" xyz="0 0 0"/> <geometry> <mesh filename="package://barista_description/meshes/turtlebot/sensors/hokuyo.dae"/> </geometry> </visual> </link> <joint name="laser_sensor_joint" type="fixed"> <origin rpy="0 0 0" xyz="0.103007 0.0 0.17"/> <parent link="base_link"/> <child link="laser_sensor_link"/> </joint> <gazebo reference="laser_sensor_link"> <sensor name="lidar" type="ray"> <always_on>true</always_on> <visualize>false</visualize> <update_rate>20</update_rate> <ray> <scan> <horizontal> <samples>720</samples> <resolution>1.000000</resolution> <min_angle>-3.1416</min_angle> <max_angle>3.1416</max_angle> </horizontal> </scan> <range> <min>0.120000</min> <max>6.0</max> <resolution>0.015000</resolution> </range> <noise> <type>gaussian</type> <mean>0.0</mean> <stddev>0.01</stddev> </noise> </ray> <plugin filename="libgazebo_ros_ray_sensor.so" name="scan"> <ros> <namespace>cleaner_2</namespace> <remapping>~/out:=scan</remapping> </ros> <output_type>sensor_msgs/LaserScan</output_type> <frame_name>cleaner_2/laser_sensor_link</frame_name> </plugin> </sensor> </gazebo> </robot>
---
